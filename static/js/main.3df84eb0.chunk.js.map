{"version":3,"sources":["Todo.jsx","App.js","index.js"],"names":["Todo","imgMenu","useState","inputData","setInputData","localStorage","getItem","JSON","parse","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","val","id","name","allInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","title","onClick","newEditItem","find","console","log","editItem","index","updatedItems","filter","deleteItem","data-sm-link-text","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA+HeA,EAnHF,WAET,IAAMC,EAAU,qCAEhB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAdfG,aAAaC,QAAQ,SAErBC,KAAKC,MAAMH,aAAaC,QAAQ,UAGhC,IASX,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAoCV,mBAAS,MAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KAOMC,EAAU,WAEZ,GAAIZ,EAGC,GAAIA,IAAcQ,EAEnBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAIC,KAAKL,EACD,2BAAII,GAAX,IAAgBE,KAAKhB,IAElBc,MAIfL,GAAgB,GAChBR,EAAa,IACbU,EAAc,UAGlB,CACI,IAAMM,EAAe,CAACF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAKhB,GAChEO,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBhB,EAAa,SArBboB,MAAM,kCAoDd,OAJAC,qBAAW,WACPpB,aAAaqB,QAAQ,QAASnB,KAAKoB,UAAUlB,MAC9C,CAACA,IAGA,mCACG,qBAAKmB,UAAU,WAAf,SACK,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAK5B,EAAS6B,IAAK7B,IACxB,6EAGJ,sBAAK2B,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,6BAAmBC,MAAO9B,EAAW+B,SAtEnE,SAACC,GAElB/B,EAAa+B,EAAMC,OAAOH,UAsENtB,EAAe,mBAAGiB,UAAU,qBAAqBS,MAAM,YAAYC,QAASvB,IAAgB,mBAAGa,UAAU,qBAAqBS,MAAM,eAAeC,QAASvB,OAKpK,qBAAKa,UAAU,YAAf,SAEQnB,EAAMO,KAAI,SAACC,GACP,OACI,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAIE,OACT,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBS,MAAM,aAAaC,QAAU,kBAnDvF,SAACpB,GAEd,IAAIqB,EAAc9B,EAAM+B,MAAK,SAACvB,GAC1B,OAAOA,EAAIC,KAAOA,KAEtBuB,QAAQC,IAAIH,GACZ3B,GAAgB,GAChBR,EAAamC,EAAYpB,MACzBL,EAAcI,GA2C2FyB,CAAS1B,EAAIC,OAClF,mBAAGU,UAAU,2BAA2BS,MAAM,eAAeC,QAAU,kBAzC5F,SAACM,GAChB,IAAMC,EAAepC,EAAMqC,QAAO,SAAC7B,GAC/B,OAAO2B,IAAU3B,EAAIC,MAEzBR,EAASmC,GAqCuGE,CAAW9B,EAAIC,YAJpED,EAAIC,SAcnD,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAeoB,oBAAkB,aAAaV,QA7C7D,WACnBd,MAAM,oCACNd,EAAS,KA2CO,SACI,0DC3GbuC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3df84eb0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst getLocalItems = () => {\r\n    let list = localStorage.getItem('lists');\r\n    if(list){\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    }\r\n    else{\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const imgMenu = 'https://source.unsplash.com/random';\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState(getLocalItems());\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n    const inputElement = (event) =>\r\n    {\r\n        setInputData(event.target.value);\r\n    }\r\n\r\n    const addItem = () =>\r\n    {\r\n        if(!inputData){\r\n            alert('Please Add Item Title Here...');    \r\n        }\r\n        else if (inputData && !toggleSubmit)\r\n        {\r\n            setItems(\r\n                items.map((val) => {\r\n                    if(val.id===isEditItem){\r\n                        return {...val, name:inputData};\r\n                    }\r\n                    return val;\r\n                })\r\n            );\r\n            \r\n            setToggleSubmit(true);\r\n            setInputData('');\r\n            setIsEditItem(null);\r\n        }\r\n        else\r\n        {\r\n            const allInputData = {id: new Date().getTime().toString(), name:inputData}\r\n            setItems([...items, allInputData]);\r\n            setInputData('');\r\n        }\r\n    }\r\n\r\n    const editItem = (id) =>{\r\n        //alert(id);\r\n        let newEditItem = items.find((val) => {\r\n            return val.id === id;\r\n        });\r\n        console.log(newEditItem);\r\n        setToggleSubmit(false);\r\n        setInputData(newEditItem.name);\r\n        setIsEditItem(id);\r\n    }\r\n\r\n    const deleteItem = (index) =>{\r\n        const updatedItems = items.filter((val) =>{\r\n            return index !== val.id;\r\n        })\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    const removeAllItems = () => {\r\n        alert('Deleteing All Items from List!!!');\r\n        setItems([]);\r\n    }\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n           <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={imgMenu} alt={imgMenu}/>\r\n                        <figcaption>Add Your List Here ✌️ </figcaption>\r\n                    </figure>\r\n\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍️ Add Items ...\" value={inputData} onChange={inputElement} />\r\n                        {\r\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Items\" onClick={addItem}></i> : <i className=\"fa fa-edit add-btn\" title=\"Update Items\" onClick={addItem}></i>\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((val) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={val.id}>\r\n                                        <h3>{val.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Items\" onClick={ () =>editItem(val.id)}></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Items\" onClick={ () =>deleteItem(val.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAllItems}>\r\n                            <span>CHECK LIST</span>\r\n                        </button>\r\n                    </div>\r\n                </div>   \r\n            </div>    \r\n        </>\r\n    )   \r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst App = () => {\n  return (\n    <>\n      <Todo />\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}